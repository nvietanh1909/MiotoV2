﻿@model Mioto.Models.MD_BookingCar

@{
    ViewBag.Title = "Booking Car";
    Layout = "~/Views/Shared/_LayoutBase.cshtml";
    var khachhang = Session["KhachHang"] as Mioto.Models.KhachHang;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js" rel="stylesheet" />
<link href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" rel="stylesheet" />
<link rel="stylesheet" href="~/zpgateway/css/bootstrap.min.css">
<link rel="stylesheet" href="~/zpgateway/css/blue.css">
<link href="~/Content/css/form_payment.css" rel="stylesheet" />
<script src="~/zpgateway//js/jquery.min.js"></script>
<script src="~/zpgateway//js/bootstrap.min.js"></script>
<script src="~/zpgateway//js/icheck.min.js"></script>
<script src="~/Scripts/Payment/main.js"></script>
<style>
    .icheckbox_flat-blue, .iradio_flat-blue {
        top: -2px;
        margin-right: 5px;
    }

    .txtGray {
        color: #798594;
    }
</style>
@using (Html.BeginForm("BookingCar", "Payment", FormMethod.Post, new { id = "bookingForm" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row m-0">
            <div class="col-lg-7 pb-5 pe-lg-5">
                <div class="row">
                    <div class="col-12 p-5">
                        <img src="@Url.Content("~/CarImages/" + (Model.Xe.HinhAnh ?? "DefaultAvatar.jpg"))" alt="">
                        @Html.HiddenFor(model => model.Xe.HinhAnh)
                    </div>
                    <div class="row m-0 bg-light">
                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.Ten</p>
                        @Html.HiddenFor(model => model.KhachHang.Ten, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.HinhAnh</p>
                        @Html.HiddenFor(model => model.KhachHang.HinhAnh, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.Email</p>
                        @Html.HiddenFor(model => model.KhachHang.Email, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.IDKH</p>
                        @Html.HiddenFor(model => model.KhachHang.IDKH, new { style = "display:none;", id = "customerID" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.DiaChi</p>
                        @Html.HiddenFor(model => model.KhachHang.DiaChi, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.GPLX</p>
                        @Html.HiddenFor(model => model.KhachHang.GPLX, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.SDT</p>
                        @Html.HiddenFor(model => model.KhachHang.SDT, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@{Model.KhachHang.IDKH = khachhang.IDKH;}</p>
                        @Html.HiddenFor(model => model.KhachHang.IDKH, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.NgaySinh</p>
                        @Html.HiddenFor(model => model.KhachHang.NgaySinh, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.CCCD</p>
                        @Html.HiddenFor(model => model.KhachHang.CCCD, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.HinhAnh</p>
                        @Html.HiddenFor(model => model.KhachHang.HinhAnh, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.GioiTinh</p>
                        @Html.HiddenFor(model => model.KhachHang.GioiTinh, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.KhachHang.MatKhau</p>
                        @Html.HiddenFor(model => model.KhachHang.MatKhau, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.Xe.TrangThaiThue</p>
                        @Html.HiddenFor(model => model.Xe.TrangThaiThue, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.Xe.DonGiaVanChuyen</p>
                        @Html.HiddenFor(model => model.Xe.DonGiaVanChuyen, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.Xe.IDCX</p>
                        @Html.HiddenFor(model => model.Xe.IDCX, new { style = "display:none;" })

                        <p class="h5 m-0" style="display:none;">@Model.Xe.NamSX</p>
                        @Html.HiddenFor(model => model.Xe.NamSX, new { style = "display:none;" })

                        <div class="col-md-4 col-6 ps-30 my-4">
                            <p class="text-muted">Hãng Xe</p>
                            <p class="h5 m-0">@Model.Xe.HangXe</p>
                            @Html.HiddenFor(model => model.Xe.HangXe)
                        </div>
                        <div class="col-md-4 col-6 ps-30 my-4">
                            <p class="text-muted">Biển số</p>
                            <p class="h5 m-0" id="number_car">@Model.Xe.BienSo</p>
                            @Html.HiddenFor(model => model.Xe.BienSo)
                        </div>
                        <div class="col-md-4 col-6 ps-30 pe-0 my-4">
                            <p class="text-muted">Màu xe</p>
                            <p class="h5">@Model.Xe.Mau</p>
                            @Html.HiddenFor(model => model.Xe.Mau)
                        </div>

                        <div class="col-md-4 col-6 ps-30 my-4">
                            <p class="text-muted">Tính năng</p>
                            <p class="h5 m-0">@Model.Xe.TinhNang</p>
                            @Html.HiddenFor(model => model.Xe.TinhNang)
                        </div>
                        <div class="col-md-4 col-6 ps-30 my-4">
                            <p class="text-muted">Số ghế</p>
                            <p class="h5 m-0">@Model.Xe.SoGhe</p>
                            @Html.HiddenFor(model => model.Xe.SoGhe)
                        </div>
                        <div class="col-md-4 col-6 ps-30 my-4">
                            <p class="text-muted">Khu vực</p>
                            <p class="h5 m-0">@Model.Xe.KhuVuc</p>
                            @Html.HiddenFor(model => model.Xe.KhuVuc)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-5 p-0 ps-lg-4">
                <div class="row m-0">
                    <div class="col-12 px-4">
                        <div class="d-flex align-items-end mt-4 mb-2">
                            <p class="h4 m-0">
                                <span class="pe-1">@Model.Xe.HangXe @Model.Xe.NamSX</span>
                            </p>
                        </div>

                        @using (Html.BeginForm("CheckRentalPeriod", "Payment", FormMethod.Get, new { id = "checkRentalForm" }))
                        {
                            <div style="display:flex; justify-content: space-between">
                                <div class="form-group">
                                    <strong>Ngày thuê</strong>
                                    @Html.EditorFor(model => model.NgayThue, new { htmlAttributes = new { @class = "form-control", id = "NgayThue" } })
                                    @Html.ValidationMessageFor(model => model.NgayThue, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <strong>Ngày trả</strong>
                                    @Html.EditorFor(model => model.NgayTra, new { htmlAttributes = new { @class = "form-control", id = "NgayTra" } })
                                    @Html.ValidationMessageFor(model => model.NgayTra, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <button type="button" id="checkRentalBtn">Kiểm tra kỳ hạn</button>
                        }

                        <div class="d-flex justify-content-between mb-2">
                            <p class="textmuted">Số lượng:</p>
                            <p class="fs-14">1</p>
                        </div>

                        <div class="d-flex justify-content-between mb-2">
                            <p class="textmuted">Giá tiền thuê/ ngày:</p>
                            <p class="fs-14">@String.Format("{0:N0} VND", Model.Xe.GiaThue)</p>
                            @Html.HiddenFor(model => model.Xe.GiaThue)
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <p class="textmuted">Giảm giá:</p>
                            <p class="fs-14"></p>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <label for="totalAmount" class="textmuted">Tổng tiền:</label>
                            <span id="GiaThue">0 VNĐ</span>
                        </div>
                    </div>

                    <!-- Mã giảm giá -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaGiamGia.MaGG, "Mã giảm giá")
                        @Html.TextBoxFor(model => model.MaGiamGia.MaGG, new { @class = "form-control", placeholder = "Nhập mã giảm giá", id = "discountCode" })
                        <button type="button" class="btn btn-secondary" id="applyDiscount">Áp dụng mã giảm giá</button>
                    </div>

                    <div class="col-12 px-0">
                        <div class="row bg-light m-0">
                            <div class="course_qr">
                                <img class="course_qr_img" src="" />
                            </div>
                        </div>
                        <div class="row m-0">
                            <div class="col-12 mb-4 p-0">
                                <div class="btn btn-primary" id="btn_paid">
                                    Thanh toán<span class="fas fa-arrow-right ps-2"></span>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary" id="btn-success" style="margin-top: 20px;">Thanh toán</button>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        document.getElementById("checkRentalBtn").onclick = function () {
            document.getElementById("checkRentalForm").submit();
        };

        document.getElementById("checkRentalBtn").onclick = function () {
            var form = document.getElementById("checkRentalForm");
            if (form.checkValidity()) {
                form.submit();
            } else {
                alert("Please fill out the required fields.");
            }
        };

        document.getElementById("btn-success").onclick = function () {
            var form = document.getElementById("bookingForm");
            if (form.checkValidity()) {
                form.submit();
            } else {
                alert("Please fill out the required fields.");
            }
        };
    </script>
}

@section Scripts {
    <script type="text/javascript">
        function cleanDate(dateString) {
            var cleanedDate = dateString.replace(/[^0-9/]/g, '');
            if (cleanedDate.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/)) {
                return cleanedDate;
            }
            return null;
        }

    $(document).ready(function () {
        function calculatePrice() {
            var ngayThue = $('#NgayThue').val();
            var ngayTra = $('#NgayTra').val();

            if (ngayThue && ngayTra) {
                var startDate = new Date(ngayThue + "T00:00:00");
                var endDate = new Date(ngayTra + "T00:00:00");
                var timeDifference = endDate - startDate;

                if (timeDifference == 0) { var days = 1; }
                days = Math.ceil(timeDifference / (1000 * 3600 * 24));

                if (days >= 0) {
                    var giaThuePerDay = @Model.Xe.GiaThue;
                    var totalPrice = (days === 0 ? giaThuePerDay : giaThuePerDay * days);
                    $('#GiaThue').text(totalPrice.toLocaleString('vi-VN') + ' VNĐ');
                    $('input[name="SoTien"]').val(totalPrice);
                } else {
                    $('#GiaThue').text('Ngày trả phải sau ngày thuê');
                }
            }
        }

        $('#NgayThue, #NgayTra').on('change', function () {
            calculatePrice();
        });

    $('#applyDiscount').click(function () {
        var discountCode = $('#discountCode').val();
        var totalPrice = parseInt($('#GiaThue').text().replace(/\D/g, ''), 10);

        if (discountCode) {
            $.ajax({
                url: '@Url.Action("ApplyDiscount", "Payment")',
                type: 'POST',
                data: { discountCode: discountCode, totalPrice: totalPrice },
                success: function (data) {
                    if (data.success) {
                        var discountedPrice = data.newTotalPrice;
                        $('#GiaThue').text(discountedPrice.toLocaleString('vi-VN') + ' VNĐ');
                        $('input[name="SoTien"]').val(discountedPrice);
                        alert('Mã giảm giá đã được áp dụng!');
                    } else {
                        alert('Mã giảm giá không hợp lệ!');
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra, vui lòng thử lại!');
                }
            });
        } else {
            alert('Vui lòng nhập mã giảm giá!');
        }
    });

        $('#btn_paid').click(function () {
            var giaThueText = document.getElementById("GiaThue").textContent;
            var giaThue = parseInt(giaThueText.replace(/\D/g, ''), 10);

            var ngayThue = $('#NgayThue').val();
            var ngayTra = $('#NgayTra').val();

            ngayThue = ngayThue.replace(/-/g, '');
            ngayTra = ngayTra.replace(/-/g, '');


            var customerID = $('#customerID').val();
            var numberCar = $('#number_car').text();
            var cleanNumberCar = numberCar.replace(/-/g, '');

            var paidContent = `${customerID} ${cleanNumberCar} ${ngayThue}`;
            if (giaThue != 0) {
                var qrUrl = `https://img.vietqr.io/image/TCB-19071843431017-compact2.png?amount=${giaThue}&addInfo=${encodeURIComponent(paidContent)}&accountName=Nguyen%20Viet%20Anh`;

                $('.course_qr_img').attr('src', qrUrl);

                $('#btn_paid').text("Xác thực đã thanh toán");

                setTimeout(function () {
                    setInterval(() => {
                        checkPaid(giaThue, paidContent);
                    }, 1000)
                }, 10000);
            }
            else {
                alert("Giá thuê phải > 0")
            }

        });
    });

        // Kiểm tra giao dịch
        let isSuccess = false;
        async function checkPaid(price, content) {
            if (isSuccess) {
                return
            }
            else {
                try {
                    const response = await fetch(
                        "https://script.google.com/macros/s/AKfycbxqKrSsb2jqpFur0lGIX86-9nHkZ-OSKYLSRTtPVPv7CHGCBbe3ofKzDLWKXCslRMtT/exec"
                    );
                    const data = await response.json();
                    const last_paid = data.data[data.data.length - 1];
                    last_prices = last_paid["price"];
                    last_content = last_paid["content"];
                    console.log(data)
                    console.log(last_paid)
                    if (last_prices >= price && last_content.includes(content)) {
                        console.log("Thanh toán thành công");
                        isSuccess = true
                        if (isSuccess) {
                            document.querySelector('#btn-success').click();
                        }
                    } else {
                        console.log("Thanh toán không thành công");
                    }
                } catch {
                    console.error("Lỗi");
                }
            }
    }
    </script>
}