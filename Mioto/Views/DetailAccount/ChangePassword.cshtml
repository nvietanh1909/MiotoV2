@model Mioto.Models.MD_ChangePassword

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}

<div class="content-title">
    <h4>Đổi mật khẩu</h4>
    <p>Vui lòng nhập mật khẩu hiện tại của bạn để thay đổi mật khẩu</p>
</div>
<div class="content-item change-pw">
    @using (Html.BeginForm("ChangePassword", "DetailAccount", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="custom-input">
            <div class="wrap-info">
                <div class="title-status">
                    <p>Mật khẩu hiện tại</p>
                </div>
            </div>
            <div class="wrap-input">
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", placeholder = "Nhập mật khẩu hiện tại" })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="custom-input">
            <div class="wrap-info">
                <div class="title-status">
                    <p>Mật khẩu mới</p>
                </div>
            </div>
            <div class="wrap-input">
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", placeholder = "Nhập mật khẩu mới ít nhất 6 ký tự" })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" }) <!-- Hiển thị cảnh báo lỗi cho trường này -->
            </div>
        </div>

        <div class="custom-input">
            <div class="wrap-info">
                <div class="title-status">
                    <p>Xác nhận mật khẩu mới</p>
                </div>
            </div>
            <div class="wrap-input">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Xác nhận lại mật khẩu mới" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" }) <!-- Hiển thị cảnh báo lỗi cho trường này -->
            </div>
        </div>

        if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.ErrorMessage
            </div>
        }

        <div class="apply-button" style=" margin-top: 20px;">
            <button type="submit" class="btn btn--m btn-primary">Xác nhận</button>
        </div>
    }
</div>
